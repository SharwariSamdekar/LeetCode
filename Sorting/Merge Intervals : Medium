class Solution {
public:
    
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        
        int n = intervals.size();
        int s,e;
        vector<vector<int>> res;
        
        sort(intervals.begin(),intervals.end(),[&intervals](vector<int> &a, vector<int> &b){
            
            return a[0]<b[0];
        });
        
        for(int i = 0; i < n; i++){
            if(i < n-1 &&  intervals[i][1] >= intervals[i+1][0]){
                s = intervals[i][0] < intervals[i+1][0]?intervals[i][0] : intervals[i+1][0];
                e = intervals[i][1] > intervals[i+1][1]?intervals[i][1] : intervals[i+1][1];
                while(i<n-1 && e >= intervals[i+1][0]){
                    e = max(e, intervals[i][1] > intervals[i+1][1]?intervals[i][1] : intervals[i+1][1]);
                    
                    i++;
                }
                // cout<<i;
                res.push_back({s,e});
            }
            
            else
                res.push_back(intervals[i]);
            // cout<<i;
        }
        
        return res;        
    }
};
