/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        //resultant vector
        vector<vector<int>> ans;
        //Initializing queue
        queue<TreeNode*> queue;
        
        int size_q;
        
        if(!root)
            return ans;
        
        queue.push(root);
        
        while(!queue.empty()){
            vector<int> level;
            size_q=queue.size();
            while(size_q>0){
                TreeNode* temp = queue.front();
                queue.pop();
                size_q--;
                level.push_back(temp->val);
                if(temp->left)queue.push(temp->left);
                if(temp->right)queue.push(temp->right);
            }
            ans.push_back(level);
        }
        return ans;
    }
};
