/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* invert(TreeNode *root){
        // Base Case
        if(root == NULL)
            return NULL;
        // if(root->left == NULL && root->right == NULL) return root;
        // Recursive step
        TreeNode* l = invert(root->left);
        TreeNode* r = invert(root->right);
        root->left = r;
        root->right = l;
        return root;
    }
    
    TreeNode* invertTree(TreeNode* root) {
        // TreeNode *n = root;
        return invert(root);
        // while(root != NULL){
        //     n->left = root->right;
        //     n->right = root->left;
        // }
        // return n;
    }
};
