/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        
        if(head == NULL)
            return NULL;
        
        Node* root, *temp=head, *r;
        unordered_map<Node*, Node*> m;
        
        while(temp != NULL){
            Node *n = new Node(temp->val);
            // n->val = temp->val;
            // n->next = NULL;
            // n->random = temp;
            m[temp] = n;
            temp = temp->next;
        }
        
        temp = head;
        root = m[head];
        
        while(temp != NULL){
            r = m[temp];
            r->next = m[temp->next];
            r->random = m[temp->random];
            temp = temp->next;
        }
        
        return root;
    }
};
