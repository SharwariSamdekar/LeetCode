class Solution {
public:
    string simplifyPath(string path) {
        
        stack<string> dir;
        int n = path.length();
        string ans = "";
        int i = 0;
        for(i = 0; i < n; i++){
            
            
            while(path[i] == '/'){
                i++;
            }
            
            string temp = "";
            while(i < n && path[i] != '/'){
                temp.push_back(path[i]);
                i++;
            }
            
            if(temp.compare("..") == 0 ){
                if(!dir.empty())
                    dir.pop();
            }
            
            else if(temp.compare(".") == 0)
                continue;
            else if(temp.length() != 0)
                dir.push(temp);
            }
             
        
        
            
            while(!dir.empty()){
                ans.insert(0,dir.top());
                ans.insert(0,"/");
                dir.pop();
            }
            
            if(ans == "")
                return "/";
            return ans;
        
    }
};
