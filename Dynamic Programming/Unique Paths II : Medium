class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        int n = obstacleGrid[0].size();
        vector<vector<int>> t(m,vector<int>(n,0));
        int i,j;
        
        if(obstacleGrid[0][0] == 0){
            t[0][0] = 1;
        }
        for(i = 1; i < m; i++){
            if(obstacleGrid[i][0] == 0)
            t[i][0] = t[i-1][0];
        }
        
        for(i = 1; i < n; i++){
            if(obstacleGrid[0][i] == 0)
            t[0][i] = t[0][i-1];
        }
        
        
        
        for(i = 1; i < m; i++){
            for(j = 1; j < n; j++){
                if(obstacleGrid[i][j] == 0){
                    t[i][j] = t[i-1][j] + t[i][j-1];
                }
            }
        }
        
     return t[m-1][n-1];       
    }
};
