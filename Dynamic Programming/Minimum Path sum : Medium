class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<vector<int>> sum(m,vector<int>(n,0));
        sum[0][0] = grid[0][0];
        
        int i, j;
        //sum the elements for 1st row and column
        // cout<<m<<" "<<n<<endl;
        for(i = 1; i < n; i++){
            sum[0][i] = grid[0][i] + sum[0][i-1];
        }
        
        for(i = 1; i < m; i++){
            sum[i][0] = grid[i][0] + sum[i-1][0];
        }
        
        //Find minimum sum path
        for(i = 1; i < m; i++){
            for(j = 1; j < n; j++){
                sum[i][j] = grid[i][j] + min(sum[i-1][j],sum[i][j-1]);
            }
        }
        
        return sum[m-1][n-1];
    }
};
