class Solution {
public:
    int longestPalindromeSubseq(string s) {
        
        int n = s.size(), i, j;
        
        vector<vector<int>> dp(n, vector<int>(n,0));
        
        for(i = 0; i < n; i++)
            dp[i][i] = 1;
        
        for(i = n-1; i >= 0; i--){
            for(j = i+1; j < n; j++){
                if(s[i] == s[j]){
                    dp[i][j] = 2 + dp[i+1][j-1];
                }
                else{
                    dp[i][j] = max(dp[i][j-1], dp[i+1][j]);
                }
            }
        }
        
        return dp[0][n-1];
        
    }
};
