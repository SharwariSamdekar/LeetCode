class MedianFinder {
public:
    /** initialize your data structure here. */
    priority_queue<int> maxpq;
    priority_queue<int, vector<int>, greater<int>> minpq;
    bool even = true;
    
    MedianFinder() {
        
    }
    
    void addNum(int num) {
        if(even){
            minpq.push(num);
            maxpq.push(minpq.top());
            minpq.pop();
        }
        else{
            maxpq.push(num);
            minpq.push(maxpq.top());
            maxpq.pop();
            // minpq.push(num);
        }
        even = !even;
        return;
    }
    
    double findMedian() {
        if(even){
            return (0.5*(maxpq.top() + minpq.top()));
        }
        else
            return (double)maxpq.top();
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
